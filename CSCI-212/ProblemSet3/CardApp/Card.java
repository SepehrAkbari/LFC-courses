/*
 * Author @ Sepehr Akbari (Compiler)
 * File: Card Class
 * April 16, 2024
 * Title: "Card Game: How I lost my life savings!"
 * Desc:
    * Define a class called Card that has two private data items: 
    one int called value and one String called suit. 
    This String takes the values "Diamonds", "Hearts", "Clubs" or "Spades". Also, do the following:
        * create a default constructor that sets value to a random value in 
        1-13 and suit to a random suit among the four.
        * create a constructor that takes 2 arguments, an int for card value
        and a String for card suit
        * create getters and setters for the two data items
        * a toString method that prints the card in this format:
        "5 of Hearts", "King of Spades" etc. Note that 1 should be printed as "Ace",
        11 as "Jack", 12 as "Queen" and 13 as "King"
        * an equals method that returns true if two cards have the same suit and value, false otherwise.
    * Use arrays in the constructor.
 * 
 * Points: [30 points]
 */

// Packages & Imports
package CardApp;
import java.util.*;

public class Card {
    // Random object
    Random rand = new Random();
    
    // Private data items
    private int value;
    private String suit;

    // Arrays to store the suits and values
    private String[] suits = {"Diamonds", "Hearts", "Clubs", "Spades"};
    private String[] values = {"Ace", "2", "3", "4", "5", "6", "7", "8", "9", "10", "Jack", "Queen", "King"};
    
    // Default constructor
    public Card() {
        // Random value and suit
        this.value = rand.nextInt(13) + 1;
        this.suit = suits[rand.nextInt(4)];
    }
    
    // Constructor
    public Card(int value, String suit) {
        this.value = value;
        this.suit = suit;
    }
    
    // Getter (int value)
    public String getValue() {
        return values[this.value - 1];
    }
    
    // Getter (String suit)
    public String getSuit() {
        return this.suit;
    }
    
    // Setter (int value)
    public void setValue(int value) {
        this.value = value;
    }

    // Setter (String suit)
    public void setSuit(String suit) {
        this.suit = suit;
    }
    
    // toString() method
    public String toString() {
        return values[this.value - 1] + " of " + this.suit;
    }
    
    // equals() method
    public boolean equals(Card card) {
        // Check if the two cards have the same suit and value
        return (String.valueOf(this.value).equals(card.getValue())) && (this.suit.equals(card.getSuit()));
    }

    // main() method for testing (not required)
    public static void main(String[] args) {
        System.out.println("\n Card Game: How I lost my life savings! \n");
        System.out.println("Testing: \n");
        /*
         * Testing the default constructor
         */

        // Card objects (default constructor())
        Card card1 = new Card();
        Card card2 = new Card();

        /*
         * Testing the constructor
         */

        // Card objects (constructor(value, suit))
        Card card3 = new Card(1, "Hearts");
        Card card4 = new Card(13, "Spades");

        // Equal Card objects (constructor(value, suit))
        Card card5 = new Card(10, "Clubs");
        Card card6 = new Card(10, "Clubs");

        /*
         * Testing toString() method
         */

        // Print the cards (generated by the default constructor)
        System.out.println("Card 1: " + card1.toString());
        System.out.println("Card 2: " + card2.toString());

        // Print the cards (set by the constructor)
        System.out.println("Card 3: " + card3.toString());
        System.out.println("Card 4: " + card4.toString());

        // Print the equal cards (set by the constructor)
        System.out.println("Card 5: " + card5.toString());
        System.out.println("Card 6: " + card6.toString());

        /*
         * Testing equals() method
         */

        // Check if the cards are equal
        System.out.println("Card 1 & Card 2 are equal: " + card1.equals(card2));

        // Check if the cards are equal (they are not)
        System.out.println("Card 3 & Card 4 are equal: " + card3.equals(card4));

        // Check if the cards are equal (they are)
        System.out.println("Card 5 & Card 6 are equal: " + card5.equals(card6));

        /*
         * Testing getters and setters
         */

        // Set the value of card3
        card3.setValue(12);

        // Set the suit of card4
        card4.setSuit("Diamonds");

        // Get the value of card3
        System.out.println("New Card 3, Value: " + card3.getValue());
        System.out.println("New Card 3: " + card3.toString());

        // Get the suit of card4
        System.out.println("New Card 4, suit: " + card4.getSuit());
        System.out.println("New Card 4: " + card4.toString());

        System.out.println();
    }
}