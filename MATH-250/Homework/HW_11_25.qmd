---
title: "Simple Linear Regression"
author: "Sepehr Akbari"
date: "11/25/2024"
format: html
embed-resources: true
editor_options: 
  chunk_output_type: console
---

```{r}
#| message: false
#| warning: false
library(tidyverse)
library(modeldata)
library(broom)
```


## Problem 1

::: {.callout-note appearance="minimal" icon="false"}
The first 5 problems refer to the `modeldata::penguins` data set, which we may view as
representing a simple random sample of antarctic penguins. Adhere to all the best-practices
covered in class.

Create a scatterplot with regression line showing the relationship between bill length and bill
depth for gentoo penguins. Use depth as the explanatory variable. Omit the standard error
ribbon and suppress all output other than the plot and code.
:::

As we are only interested in the gentoo penguins, lets filter our sample to only include them.

```{r}
#| message: false
#| warning: false
gentoos <- penguins %>% 
  filter(species == "Gentoo")
```

Now we plot.

```{r}
#| message: false
#| warning: false
ggplot(
  gentoos,
  aes(x = bill_depth_mm, 
      y = bill_length_mm)
) +
  geom_point() +
  geom_smooth(method = "lm", 
              se = FALSE
  ) +
  labs(
    title = "Gentoos' Bill Length vs Depth",
    x = "Bill Depth (mm)",
    y = "Bill Length (mm)"
  ) +
  theme_minimal()
```

## Problem 2

::: {.callout-note appearance="minimal" icon="false"}
Determine the equation of this regression line and use it to predict the bill length of a gentoo
penguin with a bill depth of 15.5 millimeters. What is the residual of the observation in this
set with an actual bill depth of 15.5 millimeters?
:::

The equation of a line is in the form of: 

$$ y = mx + b $$

where $m$ is the slope and $b$ is the intercept.

We can get the equation of the regression line by fitting a linear model to the data.

```{r}
#| message: false
#| warning: false
model_gentoos <- lm(bill_length_mm ~ bill_depth_mm, data = gentoos)
summary(model_gentoos)
```

So the estimated slope is $2.0208$ and the estimated intercept is $17.2295$.

$$ length = 2.0208 \cdot (depth) + 17.2295 $$

To predict the bill length of a gentoo penguin with a bill depth of 15.5 millimeters, we plug in $depth = 15.5$ into the equation.

```{r}
#| message: false
#| warning: false
predicted_length <- 2.0208 * 15.5 + 17.2295
```

So the predicted bill length is **`{r} predicted_length` mm**.

Now, to find the residual, we need to find the actual bill length of the penguin with a bill depth of 15.5 mm.

```{r}
#| message: false
#| warning: false

true_length <- gentoos %>% 
  filter(bill_depth_mm == 15.5) %>% 
  pull(bill_length_mm)
```

Now, we can find the residual, with $\text{residual} = \text{predicted} - \text{actual}$.

```{r}
#| message: false
#| warning: false

residual_gentoos <- predicted_length - true_length
```

So the residual is **`{r} residual_gentoos` mm**.

## Problem 3

::: {.callout-note appearance="minimal" icon="false"}
Does the data provide evidence of a linear relationship between `bill_length_mm` and
`bill_depth_mm` among gentoos in the larger population of penguins? Follow all best-practices
from class.
:::

Before analyzing the data, we set up the hypotheses:

- Null Hypothesis ($H_0$): The average `bill_length_mm` is not linearly related to `bill_depth_mm`. Specifically, the slope of the regression line is zero.

- Alternative Hypothesis ($H_1$): The average `bill_length_mm` is linearly related to `bill_depth_mm`. Specifically, the slope of the regression line is not zero.

Let's look at the data points again to see if there is an obvious linear or non-linear relationship.

```{r}
#| message: false
#| warning: false
ggplot(
  gentoos,
  aes(x = bill_depth_mm, 
      y = bill_length_mm)
) +
  geom_point() +
  labs(
    title = "Gentoos' Bill Length vs Depth",
    x = "Bill Depth (mm)",
    y = "Bill Length (mm)"
  ) +
  theme_minimal()
```

It seems like there is a linear relationship between `bill_length_mm` and `bill_depth_mm`. There is a slight increase in variablity of lengths as the depth gets very high, but it is not enough to suggest a non-linear relationship. Lets look at the probability of the slope being zero in the larger population of penguins.

We can use the same linear model fit that we did in Problem 2, to test the hypothesis.

```{r}
#| message: false
#| warning: false

summary(model_gentoos)
```

The p-value of $1.02 \times 10^{-15}$ is very small, so we have sufficient evidence to **reject the null hypothesis**. We can conclude there is a linear relationship between `bill_length_mm` and `bill_depth_mm` among gentoos in the larger population of penguins.

## Problem 4

::: {.callout-note appearance="minimal" icon="false"}
Create an attractive residual plot for the regression model above. Are any trends apparent that might raise concerns about the model?
::::

We can create a residual plot by plotting the residuals against the fitted values. Lets form a dataset with the residuals and the fitted values, using the `augment` function.

```{r}
#| message: false
#| warning: false
gentoos_aug <- augment(model_gentoos)
```

Now we can plot the residuals against the fitted values, to see if the model is reasonable for inference.

```{r}
#| message: false
#| warning: false
ggplot(
  gentoos_aug,
  aes(x = .fitted, 
      y = .resid)
) +
  geom_point() +
  geom_hline(yintercept = 0) +
  labs(
    title = "Residual Plot (Gentoos)",
    x = "Fitted Values",
    y = "Residuals"
  ) +
  theme_minimal()
```

The residual plot shows no obvious patterns, which is a good sign. The model seems reasonable for inference.

## Problem 5

::: {.callout-note appearance="minimal" icon="false"}
Obtain a colored scatterplot showing bill length vs bill depth for all three species. Include all 3 regression lines. Note: in order to specify such a model, we will eventually need to identify 3 slopes and 3 intercepts.
:::

We can simply use the `species` variable as the color aesthetic in the plot. 

```{r}
#| message: false
#| warning: false
ggplot(
  penguins,
  aes(x = bill_depth_mm, 
      y = bill_length_mm,
      color = species)
) +
  geom_point() +
  geom_smooth(method = "lm", 
              se = FALSE
  ) +
  labs(
    title = "Penguins' Bill Length vs Depth",
    x = "Bill Depth (mm)",
    y = "Bill Length (mm)",
    color = "Species"
  ) +
  theme_minimal() +
  scale_color_brewer(palette = "Dark2")
```

## Problem 6

::: {.callout-note appearance="minimal" icon="false"}
The last three problems refer to the `modeldata::meats` set, which can be regarded as a random
sample of meat.

Does the data provide evidence for a linear relationship between fat content and protein
content? Treat `protein` as the explanatory variable and follow all best-practices from class.
:::

Before analyzing the data, we set up the hypotheses:

- Null Hypothesis ($H_0$):  The average `fat` content is not linearly related to `protein` content. Specifically, the slope of the regression line is zero

- Alternative Hypothesis ($H_1$): The average `fat` content is linearly related to `protein` content. Specifically, the slope of the regression line is not zero.

Let's look at the data points to see if there is an obvious linear or non-linear relationship.

```{r}
#| message: false
#| warning: false
ggplot(
  meats,
  aes(x = protein, 
      y = fat)
) +
  geom_point() +
  labs(
    title = "Fat & Protein Content",
    x = "Protein Content (%)",
    y = "Fat Content (%)"
  ) +
  theme_minimal()
```

It seems like there is a linear relationship between `fat` and `protein` content. There is a slight variablity when protein content is lower, but it is not enough to suggest a non-linear relationship. Lets look at the probability of the slope being zero in the larger population of meats.

We can use a linear model to test the hypothesis.

```{r}
#| message: false
#| warning: false
model_meats <- lm(fat ~ protein, data = meats)
summary(model_meats)
```

The p-value of $2 \times 10^{-16}$ is very small, so we have sufficient evidence to **reject the null hypothesis**. We can conclude there is a linear relationship between `fat` and `protein` content in the larger population of meats.

## Problem 7

::: {.callout-note appearance="minimal" icon="false"}
Create an attractive residual plot for the model above. Are any trends apparent that might
raise concerns about the model?
:::

Lets use the `augment` function to get the residuals and fitted values.

```{r}
#| message: false
#| warning: false

meats_aug <- augment(model_meats)
```

Now we can plot the residuals against the fitted values, to see the data trends and check if the model is reasonable for inference.

```{r}
#| message: false
#| warning: false

ggplot(
  meats_aug,
  aes(x = .fitted, 
      y = .resid)
) +
  geom_point() +
  geom_hline(yintercept = 0) +
  labs(
    title = "Residual Plot (Meats)",
    x = "Fitted Values",
    y = "Residuals"
  ) +
  theme_minimal()
```

The residuals do not appear to be randomly scattered around zero. Specifically, there seems to be a curvature or wave-like pattern in the residuals, suggesting a possible non-linear relationship between the variables. This violates the linearity assumption of the model. Moreover, the spread of residuals increases as fitted values increase, which violates the constant variance assumption. These trends raise concerns about the model. Meaning that **this model may not be suitable for inference**.

## Problem 8

::: {.callout-note appearance="minimal" icon="false"}
What is the equation of the regression line? What is the predicted fat content of an observation
with a protein content of 13.1%? What is the residual of the observation with that protein
content?
:::

We can get the equation of the regression line by fitting a linear model to the data.

```{r}
#| message: false
#| warning: false
summary(model_meats)
```

So the estimated slope is $-3.6358$ and the estimated intercept is $82.4334$.

$$ 
\text{fat} = -3.6358 \cdot \text{protein} + 82.4334
$$
So, the predicted `fat` content of an observation with a `protein` content of 13.1%, we plug in $protein = 13.1$ into the equation.

```{r}
#| message: false
#| warning: false

predicted_fat <- -3.6358 * 13.1 + 82.4334
```

So the predicted fat content is **`{r} predicted_fat`%**.

Now, to find the residual, we need to find the actual fat content of the observation with a protein content of 13.1%. Then we can find the residual with $\text{residual} = \text{predicted} - \text{actual}$.

```{r}
#| message: false
#| warning: false

true_fat <- meats %>% 
  filter(protein == 13.1) %>% 
  pull(fat)
```

```{r}
#| message: false
#| warning: false

residual_meats <- predicted_fat - true_fat
```

So the residual is **`{r} residual_meats`%**.

Note, that this prediction used a linear model which may not be suitable for inference in this data, as we discussed in Problem 7.





















